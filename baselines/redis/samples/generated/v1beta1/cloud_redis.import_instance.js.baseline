// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


'use strict';
// sample-metadata:
//   title: CloudRedis importInstance Sample
//   description:  Import a Redis RDB snapshot file from Cloud Storage into a Redis instance. Redis may stop serving during this operation. Instance state will be IMPORTING for entire operation. When complete, the instance will contain only data from the imported file. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.
//   generated: true
//   api: cloud_redis
//   api_version: v1beta1
//   rpcName: cloudRedis.importInstance

function main(name, inputConfig) {
  // [START redis_v1beta1_generated_CloudRedis_ImportInstance_async]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Redis instance resource name using the form:
   *      `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
   *  where `location_id` refers to a GCP region.
   */
  // const name = 'abc123'
  /**
   *  Required. Specify data to be imported.
   */
  // const inputConfig = ''

  // Imports the Redis library
  const {CloudRedisClient} = require('redis').v1beta1;

  // Instantiates a client
  const redisClient = new CloudRedisClient();

  async function importInstance() {
    // Construct request
    const request = {
      name,
      inputConfig,
    };

    // Run request
    const [operation] = await redisClient.importInstance(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  importInstance();
  // [END redis_v1beta1_generated_CloudRedis_ImportInstance_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
