// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


'use strict';
// sample-metadata:
//   title: CloudTasks resumeQueue Sample
//   description:  Resume a queue. This method resumes a queue after it has been PAUSED google.cloud.tasks.v2.Queue.State.PAUSED or DISABLED google.cloud.tasks.v2.Queue.State.DISABLED. The state of a queue is stored in the queue's state google.cloud.tasks.v2.Queue.state; after calling this method it will be set to RUNNING google.cloud.tasks.v2.Queue.State.RUNNING. WARNING: Resuming many high-QPS queues at the same time can lead to target overloading. If you are resuming high-QPS queues, follow the 500/50/5 pattern described in Managing Cloud Tasks Scaling Risks(https://cloud.google.com/tasks/docs/manage-cloud-task-scaling).
//   generated: true
//   api: cloud_tasks
//   api_version: v2
//   rpcName: cloudTasks.resumeQueue

function main(name) {
  // [START cloudtasks_v2_generated_CloudTasks_ResumeQueue_async]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The queue name. For example:
   *  `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
   */
  // const name = 'abc123'

  // Imports the Tasks library
  const {CloudTasksClient} = require('tasks').v2;

  // Instantiates a client
  const tasksClient = new CloudTasksClient();

  async function resumeQueue() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await tasksClient.resumeQueue(request);
    console.log(response);
  }

  resumeQueue();
  // [END cloudtasks_v2_generated_CloudTasks_ResumeQueue_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
