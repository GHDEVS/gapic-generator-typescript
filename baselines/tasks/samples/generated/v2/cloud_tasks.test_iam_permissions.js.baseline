// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


'use strict';
// sample-metadata:
//   title: CloudTasks testIamPermissions Sample
//   description:  Returns permissions that a caller has on a Queue google.cloud.tasks.v2.Queue. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND google.rpc.Code.NOT_FOUND error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may &quot;fail open&quot; without warning.
//   generated: true
//   api: cloud_tasks
//   api_version: v2
//   rpcName: cloudTasks.testIamPermissions

function main(resource, permissions) {
  // [START cloudtasks_v2_generated_CloudTasks_TestIamPermissions_async]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  REQUIRED: The resource for which the policy detail is being requested.
   *  See the operation documentation for the appropriate value for this field.
   */
  // const resource = 'abc123'
  /**
   *  The set of permissions to check for the `resource`. Permissions with
   *  wildcards (such as '*' or 'storage.*') are not allowed. For more
   *  information see
   *  IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).
   */
  // const permissions = 'abc123'

  // Imports the Tasks library
  const {CloudTasksClient} = require('tasks').v2;

  // Instantiates a client
  const tasksClient = new CloudTasksClient();

  async function testIamPermissions() {
    // Construct request
    const request = {
      resource,
      permissions,
    };

    // Run request
    const response = await tasksClient.testIamPermissions(request);
    console.log(response);
  }

  testIamPermissions();
  // [END cloudtasks_v2_generated_CloudTasks_TestIamPermissions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
