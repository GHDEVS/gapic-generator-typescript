// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


'use strict';
// sample-metadata:
//   title: ShowcaseService collect Sample
//   description:  This method will collect the words given to it. When the stream is closed by the client, this method will return the a concatenation of the strings passed to it. This method showcases client-side streaming rpcs.
//   generated: true
//   api: echo
//   api_version: v1beta1
//   rpcName: echo.collect

function main() {
  // [START localhost_v1beta1_generated_Echo_Collect_async]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The content to be echoed by the server.
   */
  // const content = 'abc123'
  /**
   *  The error to be thrown by the server.
   */
  // const error = ''

  // Imports the Showcase library
  const {EchoClient} = require('showcase').v1beta1;

  // Instantiates a client
  const showcaseClient = new EchoClient();

  async function collect() {
    // Construct request
    const request = {
    };

    // Run request
    const stream = await showcaseClient.collect((response) => console.log(response));
    stream.write(request);
    stream.end();
  }

  collect();
  // [END localhost_v1beta1_generated_Echo_Collect_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
